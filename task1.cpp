#include <iostream>
#include <iomanip>

struct Date {
    int hours;
    int minutes;

    // Конструктор з значеннями за замовчуванням
    Date(int h = 0, int m = 0) : hours(h), minutes(m) {}
};

/*
struct Date: Оголошення структури Date, яка міститиме два поля: hours (ціле число для годин) та minutes (ціле число для хвилин).
Конструктор: Дозволяє ініціалізувати hours та minutes з можливістю використання значень за замовчуванням (0 для обох).

*/

// Функція для коректування часу
void adjustTime(int &h, int &m) {
    if (m >= 60) {
        h += m / 60;
        m = m % 60;
    }
    if (h >= 24) {
        h = h % 24;
    }
}

/*
void adjustTime(int &h, int &m): Функція, що приймає посилання на два цілі числа (години та хвилини).
if (m >= 60): Якщо хвилин більше або дорівнює 60, тоді:
h += m / 60;: Додає до годин кількість годин, отриману шляхом ділення хвилин на 60.
m = m % 60;: Оновлює хвилини, залишаючи тільки значення, менше ніж 60.
if (h >= 24): Якщо годин більше або дорівнює 24, тоді:
h = h % 24;: Оновлює години, залишаючи тільки значення, менше ніж 24.
*/


int main() {
    Date startTime;
  //Date startTime;: Створює змінну startTime типу Date, ініціалізуючи години та хвилини значеннями за замовчуванням (0).
    int additionalMinutes;

    // Введення початкового часу
    std::cout << "Введіть години (0-23) та хвилини (0-59): ";
    std::cin >> startTime.hours >> startTime.minutes;

    // Перевірка коректності введення
    if (startTime.hours < 0 || startTime.hours >= 24 || startTime.minutes < 0 || startTime.minutes >= 60) {
        std::cout << "Неправильний формат часу!" << std::endl;
        return 1;
    }

  //Перевіряє, чи введені години та хвилини знаходяться в допустимих межах. Якщо ні, програма виведе повідомлення про помилку та завершиться з кодом 1.

    // Введення додаткових хвилин
    std::cout << "Введіть кількість хвилин, на яку потрібно додати: ";
    std::cin >> additionalMinutes;

//Додає додаткові хвилини до startTime.minutes і викликає функцію adjustTime для коректування годин і хвилин.
  
    // Додавання додаткових хвилин
    startTime.minutes += additionalMinutes;

    // Коректування часу
    adjustTime(startTime.hours, startTime.minutes);

    // Виведення результату
    std::cout << "Новий час: " << std::setw(2) << std::setfill('0') << startTime.hours << ":"
              << std::setw(2) << std::setfill('0') << startTime.minutes << std::endl;


  //std::setw(2): Встановлює ширину поля для виводу на 2 символи.
//std::setfill('0'): Заповнює порожні місця нулями.
//Виводить новий час у форматі ГГ:ХХ.

    return 0;
}
